generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model JiraTicket {
  ticketId          String          @id
  summary           String
  priority          String
  status            String
  assignee          String?
  assigneeEmail     String?
  reporter          String?
  reporterEmail     String?
  customer          String?
  createDate        DateTime
  lastUpdated       DateTime        @default(now())
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  description       String?
  totalWaitingHours Float           @default(0)
  waitingStartTime  DateTime?
  escalations       Escalation[]
  statusHistory     StatusHistory[]
  comments          Comment[]

  @@map("jira_tickets")
}

model Escalation {
  ticketId      String
  level         String
  scheduledTime DateTime
  sentTime      DateTime?
  isSent        Boolean    @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  ticket        JiraTicket @relation(fields: [ticketId], references: [ticketId], onDelete: Cascade)

  @@id([ticketId, level])
  @@map("escalations")
}

model Customer {
  objectId  String   @id
  name      String
  objectKey String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("customers")
}

model StatusHistory {
  id          String     @id @default(cuid())
  ticketId    String
  fromStatus  String?
  toStatus    String
  changedAt   DateTime   @default(now())
  authorName  String?
  authorEmail String?
  ticket      JiraTicket @relation(fields: [ticketId], references: [ticketId], onDelete: Cascade)

  @@map("status_history")
}

model Comment {
  id           String     @id @default(cuid())
  jiraCommentId String    @unique
  ticketId     String
  body         String
  authorName   String
  authorEmail  String?
  authorKey    String?
  created      DateTime
  updated      DateTime?
  isInternal   Boolean    @default(false)
  visibility   String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  ticket       JiraTicket @relation(fields: [ticketId], references: [ticketId], onDelete: Cascade)

  @@map("comments")
}
